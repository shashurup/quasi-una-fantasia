* TODO need to do something with cljs reader
  edn reader is sometimes not enough to read repl output - ns-map по прежнему фигню показывает
* DONE ns prompt
* DONE extensibility
  need to define the architecture
* DONE Ctrl+I почему иногда перестает работать
* DONE Ctrl+A Ctrl+E
* DONE Шорткат для нового окна, переименование текущего
* DONE Сохранение\загрузка всех выражений ячеек
* DONE Копирование выражения текущей ячейки в новую
* TODO render возвращающий функцию - не работает внутри композита
  только для toplevel результата :()
* DONE Больше деталей в подсказках - аргументы функций, возможно документация
* DONE Автоматически добавлять " ) ] }
* DONE Прерывание eval
* DONE При наличии единственного кандидата Tab должен его дополнять
* TODO Привести в порядок модули editor, completions и т.д.
* DONE Поиск по истории должен игнорить скобки
* DONE Вставляем только голый текст, без форматирования
  https://stackoverflow.com/questions/58980235/stop-pasting-html-style-in-a-contenteditable-div-only-paste-the-plain-text
* DONE Initialize cljs thing in a reload-safe way
* DONE Сломалось отображение документации по символу под курсором
* DONE Обновление переменной *selection* случается при каждом eval даже если у нас ничего нет в result
* DONE Вторичная сессия nrepl для вспомогательных операций
* DONE Нужно (require 'clojure.repl) перед тем как Ctrl+H будет работать
* DONE Для завершенных xterm resize не должен менять высоту
* DONE Tab больше не пытается дополнить до ближайшего кандидата
* DONE Странное поведение wrap в sexp mode когда находишься у скобок
* TODO Автоматическое определение формата геоданных в ol.cljs
* TODO Не всегда корректно работает autoident
  Проверить можно на require поднятом из истории
* TODO Ctrl+Shift шорткаты не работают
  Может ну их, лучше использовать несколько клавиш?
* Сценарии
** Отображение в виде таблицы
*** Колонки вообще не определены
*** Колонки определены в мете всего списка (например для SQL запросов)
*** Колонки определены для каждого объекта в случаях когда объекты фильтруются/обогащаются
** DONE Фильтруем вывод l или f по типу картинка и выводим в виде галереи
   Есть предикат для mimetype работающий по встроенному определителю типа (по расширению)
   Результат отправляем в v и получаем галерею
* модуль fs
** DONE cwd - просто var
** DONE поддержка ~
** DONE поддержка локальных картинок для v
** TODO Стратегия работы с размеров вывода для v
   Осталось доделать открытие в новом окне
** DONE Определение типа файла - легкий\тяжелый режимы
   Легкий режим теперь встроен - в l и f новое поле mime-type по расширению
   Для тяжелого режима новая функция t
* TODO Редактор для поля ввода
** Сценарии
   - обернуть несколько выражений в let
   - убрать let
** Вдохновители
   - vim (модальное редакторивание, текстовые объекты)
   - smartparen
** Дополнительные условия
   - нет необходимости в глобальном поиск
** Анализ вдохновителей
*** vim
    - навигация w,e,b
    - текстовые объекты 
*** smartparen
    - навигация: start/end of sexp/symbol, up/down
    - wrap, unwrap
    - slurp, barf (forward and backward)
